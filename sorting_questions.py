# -*- coding: utf-8 -*-
"""Sorting Questions

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1r5k_I1FgdyZMG771qZMq3RVBnAYKTpq7
"""

#Wap to display sorted array using merge sort and number of iterations also

def mergesort(array):
  if len(array) > 1:
    r = len(array)//2
    L = array[:r]
    M = array[r:]

    mergesort(L)
    mergesort(M)

    i = j = k = t = 0

    while i < len(L) and j < len(M):
      if L[i] < M[i]:
        array[k] = L[i]
        i += 1
        t += 1
      else:
          array[k] = M[j]
          j += 1
      k += 1

    while i < len(L):
      array[k] = L[i]
      i += 1
      k += 1
    while j < len(M):
      j += 1
      k += 1

def printlist(array):
  for i in range(len(array)):
    print(array[i], end = " ")
  print()

if __name__ == "__main__":
  L1= [34,56,12,78,2,33,78]
  mergesort(L1)
  print("Sorted array is", printlist(L1))

#Wap to create function that takes two lists, each of which is unsorted, and merges the two together into one new list which is in sorted (increasing) order.
a = [10,5,15]
b = [20,3,2]

arr = a + b
print(arr)

def sortA_B(array):
  if len(array) > 1:
    r = len(array)//2
    L = array[:r]
    M = array[r:]

    mergesort(L)
    mergesort(M)

    i = j = k = 0

    while i < len(L) and j < len(M):
      if L[i] < M[i]:
        array[k] = L[i]
        i += 1
      else:
          array[k] = M[j]
          j += 1
      k += 1

    while i < len(L):
      array[k] = L[i]
      i += 1
      k += 1
    while j < len(M):
      j += 1
      k += 1
  print(array)

def printlist(array):
  for i in range(len(array)):
    print(array[i], end = " ")
  print()

sortA_B(arr)

a = [10,5,15]
b = [20,3,2]

def insert(a,b):
    array = a+b
    for step in range(1, len(array)):
        key = array[step]
        j = step-1
        while j >= 0  and key < array[j]:
            array[j+1] = array[j]
            j = j - 1

            array[j+1] = key
            print(array)
insert(a,b)

